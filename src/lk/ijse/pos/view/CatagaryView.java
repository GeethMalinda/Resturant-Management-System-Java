/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.pos.view;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.pos.controller.CatagoryController;
import lk.ijse.pos.modal.Catagory;

/**
 *
 * @author ASUS
 */
public class CatagaryView extends javax.swing.JPanel {

    /**
     * Creates new form CatagaryView
     */
    public CatagaryView() {

        initComponents();
        loadAlltotable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        txtid = new javax.swing.JTextField();
        cmbstatus = new javax.swing.JComboBox<>();
        txtCatagory = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnDelete1 = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnTableAdd = new javax.swing.JButton();
        btncleartext = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1250, 800));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 153));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/pos/icon/icons8_food_50px_1.png"))); // NOI18N
        jLabel1.setText("Manage Catagory");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 330, 70));

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Catagory Id", "Status", "name"
            }
        ));
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 1120, 480));

        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });
        add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 410, 30));

        cmbstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Deactive" }));
        cmbstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbstatusActionPerformed(evt);
            }
        });
        add(cmbstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 140, 460, 30));

        txtCatagory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCatagoryActionPerformed(evt);
            }
        });
        add(txtCatagory, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 410, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Catagory Id");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 120, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Status");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 140, 60, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Catagory Name");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 130, 30));

        btnDelete1.setBackground(new java.awt.Color(204, 0, 51));
        btnDelete1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDelete1.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete1.setText("Delete");
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });
        add(btnDelete1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 730, 130, 50));

        btnEdit.setBackground(new java.awt.Color(0, 153, 0));
        btnEdit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 730, 130, 50));

        btnTableAdd.setBackground(new java.awt.Color(0, 0, 204));
        btnTableAdd.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnTableAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnTableAdd.setText("Add");
        btnTableAdd.setBorder(null);
        btnTableAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTableAddActionPerformed(evt);
            }
        });
        add(btnTableAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 730, 130, 50));

        btncleartext.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btncleartext.setText("Clear Text");
        btncleartext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncleartextActionPerformed(evt);
            }
        });
        add(btncleartext, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 190, 100, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked

        DefaultTableModel modal = (DefaultTableModel) tbl.getModel();
        int row = tbl.getSelectedRow();
        txtid.setText(modal.getValueAt(row, 0).toString());
        cmbstatus.setSelectedItem(modal.getValueAt(row, 1).toString());
        txtCatagory.setText(modal.getValueAt(row, 2).toString());


    }//GEN-LAST:event_tblMouseClicked

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed

        if (txtid.getText().length() > 0) {
            try {
                Catagory obj = new CatagoryController().getCatagory(txtid.getText());
                if (obj != null) {
                    cmbstatus.setSelectedItem(obj.getStatus());
                    txtCatagory.setText(obj.getCatagory());
                } else {
                    JOptionPane.showMessageDialog(this, "No risult Found", "Warning", JOptionPane.WARNING_MESSAGE);
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CatagaryView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(CatagaryView.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Insert An Id", "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_txtidActionPerformed

    private void cmbstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbstatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbstatusActionPerformed

    private void txtCatagoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCatagoryActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_txtCatagoryActionPerformed

    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed

        
        String id = txtid.getText();
        if (id.length() > 0) {
            try {
                boolean isDeleted = new CatagoryController().DeleteCatagory(id);
                if (isDeleted) {
                    JOptionPane.showMessageDialog(this, "DELETED");
                    loadAlltotable();
                } else {
                    JOptionPane.showMessageDialog(this, "Try Again", "Warning", JOptionPane.WARNING_MESSAGE);
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CatagaryView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(CatagaryView.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Plase enter details..", "Error", JOptionPane.ERROR_MESSAGE);
        }
       

        // TODO add your handling code here:
    }//GEN-LAST:event_btnDelete1ActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed

        
        if (txtid.getText().length() > 0) {
            try {
                String id = txtid.getText();
                String status = cmbstatus.getSelectedItem().toString();
                String name = txtCatagory.getText();

                Catagory obj = new Catagory(id, status, name);
                boolean isUpdated = new CatagoryController().Update(obj);
                if (isUpdated) {
                    JOptionPane.showMessageDialog(this, "Updated");
                    loadAlltotable();
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Try Again", "Warning", JOptionPane.WARNING_MESSAGE);

                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CatagaryView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(CatagaryView.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Please Insert An Id", "Error", JOptionPane.ERROR_MESSAGE);
        }
        

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnTableAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTableAddActionPerformed

        if (txtid.getText().length() > 0) {
            try {
                String id = txtid.getText();
                String status = cmbstatus.getSelectedItem().toString();
                String name = txtCatagory.getText();

                Catagory obj = new Catagory(id, status, name);
                boolean isSaved = new CatagoryController().Saved(obj);
                if (isSaved) {
                    JOptionPane.showMessageDialog(this, "Saved.....");
                    loadAlltotable();
                    
                
                } 
                else {
                    JOptionPane.showMessageDialog(this, "Try Again..", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CatagaryView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(CatagaryView.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Please Insert Id ", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTableAddActionPerformed

    private void btncleartextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncleartextActionPerformed
      txtCatagory.setText("");
      txtid.setText("");
      cmbstatus.setSelectedIndex(0);

    }//GEN-LAST:event_btncleartextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnTableAdd;
    private javax.swing.JButton btncleartext;
    private javax.swing.JComboBox<String> cmbstatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txtCatagory;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables

    private void loadAlltotable() {

        try {
           
            DefaultTableModel modal = (DefaultTableModel) tbl.getModel();
            modal.setRowCount(0);
            List<Catagory> catagorylist = new CatagoryController().getCatagoryList();
            for (Catagory temp : catagorylist) {
                modal.addRow(new Object[]{
                    temp.getCatId(),
                    temp.getStatus(),
                    temp.getCatagory()

                });
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CatagaryView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CatagaryView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
